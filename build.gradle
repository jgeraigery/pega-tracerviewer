import net.ltgt.gradle.errorprone.CheckSeverity

plugins {
    id 'java'
    id 'application'
    id 'net.ltgt.errorprone'        version '3.1.0'
    id 'com.github.spotbugs'        version '5.0.14'
    id 'nebula.release'             version '17.2.2'
}

group = 'com.pega.gcs'
description = "Pega-TracerViewer"

apply from: "$rootDir/gradle/artifacts.gradle"
apply from: "$rootDir/gradle/jacoco.gradle"
apply from: "$rootDir/gradle/pmd.gradle"
apply from: "$rootDir/gradle/checkstyle.gradle"
apply from: "$rootDir/gradle/spotbugs.gradle"
apply from: "$rootDir/gradle/publishing.gradle"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {

    errorprone("com.google.errorprone:error_prone_core:2.19.1")

    implementation 'gnu.getopt:java-getopt:1.0.13'
    
    implementation 'com.github.pegasystems:fringeutils-common:v3.4.4'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

application {
    mainClassName = "com.pega.gcs.tracerviewer.TracerViewer"
    applicationDefaultJvmArgs = [
                                    'XXX_SET_USER_DIR_XXX',
                                    '-Dfile.encoding=UTF-8',
                                    '-Xms1G',
                                    '-Xmx2G',
                                    '-XX:+UseG1GC',
                                    '-XX:+UseStringDeduplication'
                                ]
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs += ['-Xlint:-options']
    options.compilerArgs += ['-proc:none']
    // configure error prone
    options.errorprone.check("UnnecessaryParentheses", CheckSeverity.OFF)
}

tasks.withType(Javadoc) {
    failOnError = false
}

tasks.withType (Test) {
    maxParallelForks = 2

    testLogging {
        showStandardStreams = true
        events 'started', 'passed', 'failed'
    }

    jacoco {
        destinationFile = file("$buildDir/jacoco/${name}.exec")
        classDumpDir = file("$buildDir/jacoco/${name}_ClassDump")
    }
}

task copyLicense(type: Copy) {
    from "LICENSE"
    into "$buildDir"
}

// set user.dir to the distribution directory
startScripts {
    doLast {
        unixScript.text = unixScript.text.replace('XXX_SET_USER_DIR_XXX', '-Duser.dir=$APP_HOME')
        windowsScript.text = windowsScript.text.replace('XXX_SET_USER_DIR_XXX', '-Duser.dir=%APP_HOME%')
    }
}

build.finalizedBy jacocoTestReport, jacocoTestCoverageVerification
