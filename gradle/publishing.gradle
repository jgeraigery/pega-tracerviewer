/*
 * Allows for publishing artifacts either to Bintray or to Artifactory. Bintray is
 * the default choice but this can be configured within <root-project>/gradle.properties.
 */
apply plugin: 'maven-publish'

publishing {
    publications {
        mavenJava (MavenPublication) {
            from components.java             
            artifact sourcesJar
            artifact docsJar
            
            pom.withXml {
                def root = asNode()
                root.appendNode('name', 'Pega pega-tracerviewer')
                root.appendNode('description', 'Common library used in LogViewer and TracerViewer tools.')
                root.appendNode('url', 'https://github.com/pegasystems/pega-tracerviewer')

                def scm = root.appendNode('scm')
                scm.appendNode('url', 'https://github.com/pegasystems/pega-tracerviewer')
                scm.appendNode('connection', 'scm:https://developer@github.com/pegasystems/pega-tracerviewer.git')
                scm.appendNode('developerConnection', 'scm:git://github.com/pegasystems/pega-tracerviewer.git')

                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', 'The Apache Software License, Version 2.0')
                license.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
                license.appendNode('distribution', 'repo')

                def developers = root.appendNode('developers')
                def dev1 = developers.appendNode('developer')
                dev1.appendNode('id', 'vargm')
                dev1.appendNode('name', 'Manu Varghese')
            }
        }
    }
}

bintray {
    user = resolveProperty('bintrayUsername')
    key = resolveProperty('bintrayKey')
    publications = ['mavenJava']
    publish = true

    pkg {
        def orgName = rootProject.findProperty('organization')
        
        userOrg = orgName
        repo = rootProject.findProperty('release.stage') == 'final' ? releaseRepository : snapshotRepository
        name = project.name
        websiteUrl = 'https://github.com/pegasystems/pega-tracerviewer'
        issueTrackerUrl = 'https://github.com/pegasystems/pega-tracerviewer/issues'
        vcsUrl = 'https://github.com/pegasystems/pega-tracerviewer.git'
        licenses = ['Apache-2.0']
        labels = ['java', 'pega', 'pega trace xml']
        publicDownloadNumbers = true
        githubRepo = 'pegasystems/pega-tracerviewer'
        githubReleaseNotesFile = 'README.md'
    }
}

/*
 * Check environment for property and if that fails 
 * ask gradle to find the property somewhere within
 * the project hierarchy.
 */
String resolveProperty(String propKey) {
    String propValue = System.getenv()[propKey]
    return propValue ?: findProperty(propKey)
}
